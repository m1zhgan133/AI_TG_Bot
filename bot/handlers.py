from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile, InputMediaPhoto
from aiogram import html, F, Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from aiogram.utils.chat_member import USERS
from aiogram.utils.media_group import MediaGroupBuilder
import psycopg2

from keyboard import *
from mcp_part.agent import *
from postgres_db.crud_operations import *

router = Router()

class ActualState(StatesGroup):
    GPT_4o_mini = State()

    reg_ycal_start = State()
    reg_ycal_email = State()
    reg_ycal_caldav = State()
    reg_ycal_key = State()


@router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext) -> None:
    await state.clear()
    try:
        UserCRUD.create_user(username=message.from_user.username)
        print(f'-------------- –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–∏–∫–æ–º {message.from_user.username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è --------------')
    except Exception as e:
        pass

    start_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.full_name)}!\n"
        f'–Ø –≤–∞—à {html.bold('–ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.')}\n\n'
        f'{html.bold('–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:')}\n'
        f'{html.bold('1)')} –û–±—â–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n'
        f'{html.bold('2)')} –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –≤–∞—à–∏–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º\n'
        f'–¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ–≥–æ /registrate_Ycal\n'
        f'{html.bold('3)')} –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n'
        f'{html.bold('4)')} –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π\n\n'
        f'–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å.'
    )
    await message.answer(start_text,
                         reply_markup=model_choice)


@router.message(F.text == 'GPT-4o mini')
async def GPT_4o_mini_start(message: Message, state: FSMContext) -> None:
    await state.set_state(ActualState.GPT_4o_mini)
    start_text = (
        '–í—ã –Ω–∞—á–∞–ª–∏ —á–∞—Ç —Å –≤–∞—à–∏–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ GPT-4o mini. ‚úÖ\n'
        '–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å —á–∞—Ç –≤–≤–µ–¥–∏—Ç–µ /start'
    )
    await message.answer(start_text,
        reply_markup=remove_keyboard  # –í–æ—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ —Å–∫—Ä–æ–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )


@router.message(ActualState.GPT_4o_mini)
async def GPT_4o_mini_answer(message: Message) -> None:
    try:
        msg = await message.answer('–û—Ç–≤–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...')

        user = UserCRUD.get_user_by_username(username=message.from_user.username)
        user_data = {
            'username': user.username,
            'yandex_email': user.yandex_email,
            'yandex_password': user.yandex_password,
            'yandex_calendar_link': user.yandex_calendar_link
        }
        response = await generate_response(message.text, user_data=user_data)
        await msg.delete()
        await message.reply(f'{response}')

    except TypeError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!")


# --------------------------------------------- —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è–Ω–¥–µ–∫—Å –ø–æ—á—Ç—ã ---------------------------------------------

@router.message(Command('registrate_Ycal'))
async def command_reg_ycal_handler(message: Message, state: FSMContext) -> None:
    await state.set_state(ActualState.reg_ycal_start)
    await message.answer("""–≠—Ç–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è–Ω–¥–µ–∫—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è, –ø–æ–∑–≤–æ–ª–∏—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–ø–∏—Å–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–∞–º. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å —É–¥–æ–±–Ω–æ –∏ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏ –∏ —Ä–∞–±–æ—Ç–µ.
–ï—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –≤–≤–µ–¥–∏—Ç–µ /start
 
–ß—Ç–æ –±—ã –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–º: 
1) –≤–∞—à—É –ø–æ—á—Ç—É ‚úâÔ∏è
2) CalDAV —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å üìÖ
3) —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á, —á—Ç–æ–±—ã –±–æ—Ç –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º —Å–æ–±—ã—Ç–∏—è–º üîë

–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ –≥–¥–µ –≤–∑—è—Ç—å –∫–ª—é—á –∏ CalDAV —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–∞–π–¥.
                         """,
                         reply_markup=guide_ycal)


# –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≥–∞–π–¥–æ–≤
@router.message(StateFilter(ActualState.reg_ycal_start), F.text == '–ì–∞–π–¥ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±')
async def phone_guide_handler(message: Message, state: FSMContext) -> None:
    guide_text_1 = (
        'üì± <b>–ì–∞–π–¥ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b>\n\n'
        '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å CalDAV —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å:\n'
        '1) –ó–∞–π–¥–∏—Ç–µ –≤ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ üìÖ\n'
        'https://calendar.yandex.ru/week\n'
        '2) –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–µ—Ä—Å–∏—é –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞\n'
        '3) –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä—è–¥–æ–º —Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º ‚öôÔ∏è\n'
        '4) –ù–∞–∂–º–∏—Ç–µ –Ω–∞ "–≠–∫—Å–ø–æ—Ä—Ç" –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ CalDAV —Å—Å—ã–ª–∫—É'
    )
    # –°–æ–∑–¥–∞–µ–º –∞–ª—å–±–æ–º –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫
    album_builder = MediaGroupBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏
    album_builder.add_photo(
        media=FSInputFile("pictures/ycal_phone_guide_1.jpg")
    )
    album_builder.add_photo(
        media=FSInputFile("pictures/ycal_PC_guide_1.png")
    )
    album_builder.add_photo(
        media=FSInputFile("pictures/ycal_PC_guide_2.png"),
        caption=guide_text_1  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 1024 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª—å–±–æ–º
    await message.answer_media_group(media=album_builder.build())


    guide_text_2 = (
        '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Å—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é:\n'
        '1) –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ <a href="https://id.yandex.ru/security/app-passwords">–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–æ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</a>\n'
        '2) –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è'
    )
    # –°–æ–∑–¥–∞–µ–º –∞–ª—å–±–æ–º –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫
    album_builder = MediaGroupBuilder()

    album_builder.add_photo(
        media=FSInputFile("pictures/ycal_PC_guide_3.png"),
        caption=guide_text_2  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 1024 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª—å–±–æ–º
    await message.answer_media_group(media=album_builder.build())


@router.message(StateFilter(ActualState.reg_ycal_start), F.text == '–ì–∞–π–¥ –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ üíª')
async def pc_guide_handler(message: Message, state: FSMContext) -> None:
    guide_text_1 = (
        'üíª <b>–ì–∞–π–¥ –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞</b>\n\n'
        '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å CalDAV —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å:\n'
        '1) –ó–∞–π–¥–∏—Ç–µ –≤ –≤–∞—à <a href="https://calendar.yandex.ru/week">–∫–∞–ª–µ–Ω–¥–∞—Ä—å</a> üìÖ\n'
        '2) –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä—è–¥–æ–º —Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º ‚öôÔ∏è\n'
        '3) –ù–∞–∂–º–∏—Ç–µ –Ω–∞ "–≠–∫—Å–ø–æ—Ä—Ç" –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ CalDAV —Å—Å—ã–ª–∫—É'
    )
    # –°–æ–∑–¥–∞–µ–º –∞–ª—å–±–æ–º –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫
    album_builder = MediaGroupBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏
    album_builder.add_photo(
        media=FSInputFile("pictures/ycal_PC_guide_1.png")
    )
    album_builder.add_photo(
        media=FSInputFile("pictures/ycal_PC_guide_2.png"),
        caption=guide_text_1  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 1024 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª—å–±–æ–º
    await message.answer_media_group(media=album_builder.build())


    guide_text_2 = (
        '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Å—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é:\n'
        '1) –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –≤ <a href="https://id.yandex.ru/security/app-passwords">–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–æ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</a>\n'
        '2) –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è'
    )
    # –°–æ–∑–¥–∞–µ–º –∞–ª—å–±–æ–º –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫
    album_builder = MediaGroupBuilder()

    album_builder.add_photo(
        media=FSInputFile("pictures/ycal_PC_guide_3.png"),
        caption=guide_text_2  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 1024 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª—å–±–æ–º
    await message.answer_media_group(media=album_builder.build())



# –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
@router.message(StateFilter(ActualState.reg_ycal_start), F.text == '–î–æ–±–∞–≤–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—å')
async def start_email_input(message: Message, state: FSMContext) -> None:
    await state.set_state(ActualState.reg_ycal_email)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—É—é –∫ –Ø–Ω–¥–µ–∫—Å.–ö–∞–ª–µ–Ω–¥–∞—Ä—é:",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(StateFilter(ActualState.reg_ycal_email))
async def process_email(message: Message, state: FSMContext) -> None:
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ—á—Ç—ã (–ø—Ä–æ–ø—É—â–µ–Ω–∞ –ø–æ —É—Å–ª–æ–≤–∏—é)
    await state.set_state(ActualState.reg_ycal_caldav)
    await state.update_data(email=message.text)
    await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ CalDAV —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—å:")

@router.message(StateFilter(ActualState.reg_ycal_caldav))
async def process_caldav(message: Message, state: FSMContext) -> None:
    await state.set_state(ActualState.reg_ycal_key)
    await state.update_data(caldav_url=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è(–∫–∞–ª–µ–Ω–¥–∞—Ä—è):")

@router.message(StateFilter(ActualState.reg_ycal_key))
async def process_key(message: Message, state: FSMContext) -> None:
    user_data = await state.get_data()
    email = user_data.get("email")
    caldav_url = user_data.get("caldav_url")
    key = message.text

    try:
        UserCRUD.update_user_by_username(username=message.from_user.username, yandex_email=email ,yandex_password=key ,yandex_calendar_link=caldav_url )
        answer_text = (
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n"
            "–í–Ω–∏–º–∞–Ω–∏–µ!! –ï—Å–ª–∏ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é.\n\n"
            "–í–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
        )
        await message.answer(answer_text)
    except Exception as e:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è', e, sep='\n')


    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à–∞ –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# --------------------------------------------- –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã ---------------------------------------------
@router.message(Command('admin_get_all_users'))
async def admin_get_all_users(message: Message, state: FSMContext) -> None:
    if os.getenv('admin_username') == message.from_user.username:
        await message.answer(str(UserCRUD.get_all_users()), parse_mode=None)